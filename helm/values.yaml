# CONTEXT-----------------------------------------------------------------------
overlay: rancher_desktop

# BASE--------------------------------------------------------------------------
base:
  enable:
    namespace: false
    argocd_application: false
    env_configmap: true
    env_secret: false
    image_pull_secret: false
    repo_volume: false
    desktop_volume: false
    nfs_volume: false
    nginx_ingress: false
    traefik_ingress: false
    readiness_probe: true
    liveness_probe: true

  namespace:
    name: asset-ingest

  argocd_application:
    name: hidebound
    source_namespace: argocd
    target_namespace: hidebound

  env_configmap:
    FLASK_APP: server.app:get_app
    FLASK_DEBUG:
    FLASK_ENV:
    FLASK_RUN_PORT: "8080"
    FLASK_RUN_HOST: 0.0.0.0
    REPO_ENV:
    HIDEBOUND_INGRESS_DIRECTORY: /mnt/storage/ingress
    HIDEBOUND_STAGING_DIRECTORY: /mnt/storage/hidebound
    HIDEBOUND_INCLUDE_REGEX: ""
    HIDEBOUND_EXCLUDE_REGEX: "\\\\.DS_Store"
    HIDEBOUND_WRITE_MODE: move
    HIDEBOUND_REDACT_REGEX: "(_key|_id|_token|url)$"
    HIDEBOUND_REDACT_HASH: true
    HIDEBOUND_WORKFLOW:
      - delete
      - update
      - create
      - export
    HIDEBOUND_SPECIFICATION_FILES: []
    HIDEBOUND_DASK_CLUSTER_TYPE: local
    HIDEBOUND_DASK_NUM_PARTITIONS: 16
    HIDEBOUND_DASK_LOCAL_NUM_WORKERS: 16
    HIDEBOUND_DASK_LOCAL_THREADS_PER_WORKER: 1
    HIDEBOUND_DASK_LOCAL_MULTIPROCESSING: true
    HIDEBOUND_DASK_GATEWAY_ADDRESS: "http://proxy-public/services/dask-gateway"
    HIDEBOUND_DASK_GATEWAY_PROXY_ADDRESS: "gateway://traefik-daskhub-dask-gateway.core:80"
    HIDEBOUND_DASK_GATEWAY_PUBLIC_ADDRESS: "https://dask-gateway/services/dask-gateway/"
    HIDEBOUND_DASK_GATEWAY_AUTH_TYPE: jupyterhub
    HIDEBOUND_DASK_GATEWAY_CLUSTER_OPTIONS: []
    HIDEBOUND_DASK_GATEWAY_SHUTDOWN_ON_CLOSE: true

  env_secret:
    HIDEBOUND_DASK_GATEWAY_API_TOKEN: token
    HIDEBOUND_WEBHOOKS: []
    HIDEBOUND_EXPORTERS: []

  deployment:
    repository: thenewflesh/hidebound
    image_tag: latest
    repo_path: /home/ubuntu/hidebound
    storage_path: /mnt/storage
    image_pull_policy: IfNotPresent
    nfs_server:
    command:
      - /usr/bin/python3.7
      - /home/ubuntu/.local/lib/python3.7/site-packages/hidebound/server/app.py
    args:
    env_configmap: hidebound-env-configmap
    env_secret: hidebound-env-secret

  service:
    port: 80
    target_port: 8080

  repo_volume:
    path:

  desktop_volume:
    path:

  nginx_ingress:
    host:

  traefik_ingress:
    match:

  image_pull_secret:
    docker_config:

# OVERLAYS----------------------------------------------------------------------
overlays:
  # RANCHER-DESKTOP-------------------------------------------------------------
  rancher_desktop:
    enable:
      namespace: true
      env_secret: true
      image_pull_secret: false
      repo_volume: false
      desktop_volume: true
      traefik_ingress: true

    namespace:
      name: hidebound

    repo_volume:
      path: /local/path/to/hidebound/repository

    desktop_volume:
      path: /local/storage/path

    traefik_ingress:
      match: HostRegexp(`hidebound.local`)

    deployment:
      command:
        - /usr/bin/python3.7
        - /home/ubuntu/.local/lib/python3.7/site-packages/hidebound/server/app.py

    env_configmap:
      FLASK_DEBUG: "1"
      FLASK_ENV: development
      HIDEBOUND_INCLUDE_REGEX: ""
      HIDEBOUND_WRITE_MODE: copy
      HIDEBOUND_SPECIFICATION_FILES: []

    env_secret:
      HIDEBOUND_EXPORTERS:
        - name: disk
          target_directory: /mnt/storage/archive
          metadata_types:
            - asset-chunk
            - file-chunk
