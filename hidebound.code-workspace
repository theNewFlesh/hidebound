{
    "folders": [{"path": "./"}],
    "settings": {
        "debug.allowBreakpointsEverywhere": true,
        "python.languageServer": "Pylance",
        "python.linting.enabled": true,
        "python.linting.flake8Args": ["--config=docker/flake8.ini"],
        "python.linting.flake8Enabled": true,
        "python.linting.flake8Path": "/home/ubuntu/.local/bin/flake8",
        "python.linting.mypyArgs": ["--config=docker/mypy.ini"],
        "python.linting.mypyEnabled": true,
        "python.linting.mypyPath": "/home/ubuntu/.local/bin/mypy",
        "python.linting.pycodestylePath": "/home/ubuntu/.local/bin/pycodestyle",
        "python.linting.pylintEnabled": false,
        "python.pythonPath": "/usr/bin/python3.7",
        "python.testing.pytestArgs": ["--headless"],
        "python.testing.pytestEnabled": true,
        "python.testing.unittestEnabled": false,
        "todo-tree.filtering.excludeGlobs": ["**/docs/**/*.*"],
        "terminal.integrated.profiles.linux": {
            "zsh": {"path": "/bin/zsh"}
        },
        "search.exclude": {
            "**/docs": true
        },
        "files.exclude": {
            "**/.classpath": true,
            "**/.coverage": true,
            "**/.DS_Store": true,
            "**/.factorypath": true,
            "**/.git": true,
            "**/.hg": true,
            "**/.ipynb_checkpoints": true,
            "**/.mypy_cache": true,
            "**/.project": true,
            "**/.pytest_cache": true,
            "**/.settings": true,
            "**/.svn": true,
            "**/CVS": true,
            "*/*/**/node_modules": true,
            "**/.vscode": true,
            "**/flask_monitoringdashboard.db": true
        }
    },
    "tasks": {
        "version": "2.0.0",
        "options": {
            "cwd": "/home/ubuntu/${workspaceFolderBasename}",
            "env": {
                "REPO": "${workspaceFolderBasename}",
                "PYTHONPATH": "${PYTHONPATH}:/home/ubuntu/${workspaceFolderBasename}/python",
                "REPO_ENV": "True"
            }
        },
        "tasks": [
            {
                "label": "app",
                "command": [
                    "export DEBUG_MODE=True &&",
                    "python3.7 python/$REPO/server/app.py"
                ],
                "type": "shell"
            },
            {
                "label": "architecture",
                "command": [
                    "python3.7 -c \"import rolling_pin.repo_etl as rpo; rpo.write_repo_architecture('/home/ubuntu/$REPO/python', '/home/ubuntu/$REPO/docs/architecture.svg', exclude_regex='test|mock', orient='lr')\""
                ],
                "type": "shell"
            },
            {
                "label": "coverage",
                "command": [
                    "mkdir -p docs &&",
                    "pytest python -c docker/pytest.ini --cov=python --cov-config=docker/pytest.ini --cov-report=html:docs/htmlcov --headless"
                ],
                "type": "shell"
            },
            {
                "label": "docs",
                "command": [
                    "mkdir -p docs &&",
                    "pandoc README.md -o sphinx/intro.rst &&",
                    "sphinx-build sphinx docs &&",
                    "cp sphinx/style.css docs/_static/style.css &&",
                    "touch docs/.nojekyll &&",
                    "mkdir -p docs/resources &&",

                    "cp -R resources/screenshots docs/resources/"
                ],
                "type": "shell"
            },
            {
                "label": "fast-test",
                "command": "SKIP_SLOW_TESTS=true pytest python -c docker/pytest.ini --headless",
                "type": "shell"
            },
            {
                "label": "full-docs",
                "dependsOrder": "sequence",
                "dependsOn": [
                    "docs",
                    "coverage",
                    "architecture",
                    "metrics"
                ],
                "type": "shell"
            },
            {
                "label": "lab",
                "command": "jupyter lab --allow-root --ip=0.0.0.0 --no-browser",
                "type": "shell"
            },
            {
                "label": "lint",
                "command": [
                    "echo 'LINTING' &&",
                    "flake8 python --config docker/flake8.ini &&",
                    "echo 'TYPE CHECKING' &&",
                    "mypy python --config-file docker/mypy.ini"
                ],
                "type": "shell"
            },
            {
                "label": "metrics",
                "command": [
                    "python3.7 -c \"import rolling_pin.repo_etl as rpo; rpo.write_repo_plots_and_tables('/home/ubuntu/$REPO/python', '/home/ubuntu/$REPO/docs/plots.html', '/home/ubuntu/$REPO/docs')\""
                ],
                "type": "shell"
            },
            {
                "label": "tmp-repo",
                "command": [
                    "rm -rf /tmp/$REPO &&",
                    "cp -R python /tmp/$REPO &&",
                    "cp -R templates /tmp/$REPO/$REPO/ &&",
                    "cp -R resources /tmp/$REPO/$REPO/ &&",
                    "cp README.md /tmp/$REPO/ &&",
                    "cp LICENSE /tmp/$REPO/ &&",
                    "cp docker/dev_requirements.txt /tmp/$REPO/ &&",
                    "cp docker/prod_requirements.txt /tmp/$REPO/ &&",
                    "cp -R pip/* /tmp/$REPO/ &&",
                    "cp -R templates /tmp/$REPO/$REPO &&",
                    "find /tmp/$REPO | grep -E '__pycache__|flask_monitor|cli.py' | parallel 'rm -rf {}' &&",
                    "find /tmp/$REPO -type f | grep __init__.py | parallel 'rm -rf {}; touch {}'"
                ],
                "type": "shell"
            },
            {
                "label": "package-repo",
                "command": [
                    "cd /tmp/$REPO &&",
                    "find /tmp/$REPO | grep -E '.*test.*\\.py$|mock.*\\.py$|__pycache__' | parallel 'rm -rf {}'",
                ],
                "dependsOrder": "sequence",
                "dependsOn": [
                    "tmp-repo"
                ],
                "type": "shell"
            },
            {
                "label": "package",
                "command": [
                    "unset REPO_ENV &&",
                    "cd /tmp/$REPO &&",
                    "python3.7 setup.py sdist"
                ],
                "dependsOrder": "sequence",
                "dependsOn": [
                    "package-repo"
                ],
                "type": "shell"
            },
            {
                "label": "publish",
                "command": "unset REPO_ENV && cd /tmp/$REPO && twine upload dist/* && rm -rf /tmp/$REPO",
                "dependsOrder": "sequence",
                "dependsOn": [
                    "tox",
                    "lint",
                    "package"
                ],
                "type": "shell"
            },
            {
                "label": "python",
                "command": "python3.7",
                "type": "shell"
            },
            {
                "label": "requirements",
                "command": [
                    "python3.7 -m pip list --format freeze > docker/frozen_requirements.txt"
                ],
                "type": "shell"
            },
            {
                "label": "test",
                "command": "pytest python -c docker/pytest.ini --headless",
                "type": "shell"
            },
            {
                "label": "tox-repo",
                "command": [
                    "cp docker/flake8.ini /tmp/$REPO &&",
                    "cp docker/mypy.ini /tmp/$REPO &&",
                    "cp docker/pytest.ini /tmp/$REPO &&",
                    "cp docker/tox.ini /tmp/$REPO &&",
                    "cp python/conftest.py /tmp/$REPO &&",
                    "cp -R /home/ubuntu/$REPO/resources /tmp",
                ],
                "dependsOrder": "sequence",
                "dependsOn": [
                    "tmp-repo"
                ],
                "type": "shell"
            },
            {
                "label": "tox",
                "command": [
                    "unset REPO_ENV &&",
                    "cd /tmp/$REPO &&",
                    "tox"
                ],
                "dependsOrder": "sequence",
                "dependsOn": [
                    "tox-repo"
                ],
                "type": "shell"
            },
            {
                "label": "version",
                "dependsOrder": "sequence",
                "dependsOn": [
                    "lint",
                    "full-docs",
                    "requirements"
                ],
                "type": "shell"
            }
        ]
    }
}
